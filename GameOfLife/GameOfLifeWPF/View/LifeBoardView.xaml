<UserControl x:Class="GameOfLifeWPF.View.LifeBoardView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GameOfLifeWPF.View"
             xmlns:controls="clr-namespace:GameOfLifeWPF.Controls"
             xmlns:root="clr-namespace:GameOfLifeWPF"
             xmlns:vm="clr-namespace:GameOfLifeWPF.ViewModel"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:in="http://schemas.microsoft.com/expression/2010/interactions"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1200">
    <UserControl.Resources>
        <root:ProductConverter x:Key="_productConverter" />
        <root:InverseBooleanConverter x:Key="_inverseBooleanConverter" />
        <BooleanToVisibilityConverter x:Key="_booleanVisibilityConverter" />

        <Style TargetType="Button">
            <Setter Property="Padding" Value="5" />
        </Style>
    </UserControl.Resources>
    <DockPanel>
        <DockPanel DockPanel.Dock="Bottom" Margin="5">
            <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,5,0">
                <Run Text="Current Iteration:" />
                <Run Text="{Binding CurrentIteration, StringFormat='00000', Mode=OneWay}" FontWeight="Bold" />
            </TextBlock>
            <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,5,0">
                <Run Text="Delay" />
                <Run Text="{Binding Path=Value, ElementName=_delaySlider, StringFormat='[{0:000} ms]:'}" />
            </TextBlock>
            <Slider x:Name="_delaySlider" Minimum="0" Maximum="500" Value="{Binding DelayInMilliseconds}" Margin="0,0,5,0" MinWidth="100" VerticalAlignment="Center" LargeChange="100" SmallChange="10" >
                <Slider.ToolTip>
                    <ToolTip Content="{Binding Path=PlacementTarget.Value, RelativeSource={RelativeSource Self}}" ContentStringFormat="{}{0} ms"  />
                </Slider.ToolTip>
            </Slider>
            <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,5,0">
                <Run Text="Rules" />
                <Run Text="{Binding CurrentRuleDescription, StringFormat='[{0}]:', Mode=OneWay}" FontWeight="Bold" />
            </TextBlock>
            <TextBox Text="{Binding NewRuleDescription}" Width="100" VerticalContentAlignment="Center" Margin="0,0,5,0" />
            <Button DockPanel.Dock="Left" Content="Change" Command="{Binding ChangeRuleCommand}" Margin="0,0,5,0" />
            <TextBlock DockPanel.Dock="Left" Text="Iterations: " VerticalAlignment="Center" />
            <Button DockPanel.Dock="Right" Content="Iterate" Command="{Binding IterateCommand}" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource _booleanVisibilityConverter}}" />
            <Button DockPanel.Dock="Right" Content="Cancel" Command="{Binding CancelIterateCommand}" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource _booleanVisibilityConverter}}" />
            <TextBox VerticalContentAlignment="Center" Text="{Binding Iterations, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsIterating}" Margin="0,0,5,0">
                <TextBox.InputBindings>
                    <KeyBinding Key="Return" Command="{Binding IterateCommand}" />
                </TextBox.InputBindings>
            </TextBox>
        </DockPanel>
        <Grid DockPanel.Dock="Right">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Margin" Value="0,0,1,0" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
            </Grid.Resources>
            <TextBlock Grid.Row="0" Grid.Column="0" Text="Alive:" />
            <controls:ColorPicker Grid.Row="0" Grid.Column="1" x:Name="_aliveColor" Color="{root:SettingsBinding Path=Alive}" />
            <TextBlock Grid.Row="1" Grid.Column="0" Text="Dead:" />
            <controls:ColorPicker Grid.Row="1" Grid.Column="1" x:Name="_deadColor" Color="{root:SettingsBinding Path=Dead}" />
            <TextBlock Grid.Row="2" Grid.Column="0" Text="Border:" />
            <controls:ColorPicker Grid.Row="2" Grid.Column="1" x:Name="_borderColor" Color="{root:SettingsBinding Path=Border}" />
            <DockPanel Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2">
                <TextBlock DockPanel.Dock="Top" Text="Zoom" HorizontalAlignment="Center" />
                <Button DockPanel.Dock="Bottom" Content="Reset" HorizontalAlignment="Center">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <in:ChangePropertyAction PropertyName="Value" Value="25" TargetName="_fieldSize" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Slider x:Name="_fieldSize" RenderTransformOrigin="0.5,0.5" DockPanel.Dock="Top" Minimum="5" Maximum="25" Value="{Binding ElementName=_lifeBoard, Path=FieldSize, Delay=100, Mode=OneWayToSource, FallbackValue=25}" LargeChange="5" SmallChange="5" TickFrequency="5" TickPlacement="BottomRight"  HorizontalAlignment="Center">
                    <Slider.LayoutTransform>
                        <RotateTransform Angle="270" />
                    </Slider.LayoutTransform>
                </Slider>
            </DockPanel>
        </Grid>
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <controls:LifeBoard x:Name="_lifeBoard" DockPanel.Dock="Bottom" SnapsToDevicePixels="True" Fields="{Binding Fields}"
                                AliveColor="{Binding ElementName=_aliveColor, Path=Color}"
                                DeadColor="{Binding ElementName=_deadColor, Path=Color}"
                                Stroke="{Binding ElementName=_borderColor, Path=Color}"
                                />
        </ScrollViewer>
        <!--<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding Fields}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True">
                            <Canvas.Width>
                                <MultiBinding Converter="{StaticResource _productConverter}">
                                    <Binding Path="Value" ElementName="_fieldSize" />
                                    <Binding Path="Columns" />
                                </MultiBinding>
                            </Canvas.Width>
                            <Canvas.Height>
                                <MultiBinding Converter="{StaticResource _productConverter}">
                                    <Binding Path="Value" ElementName="_fieldSize" />
                                    <Binding Path="Rows" />
                                </MultiBinding>
                            </Canvas.Height>
                            <Canvas.CacheMode>
                                <BitmapCache EnableClearType="False" RenderAtScale="1" SnapsToDevicePixels="True" />
                            </Canvas.CacheMode>
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Width" Value="{Binding Path=Value, ElementName=_fieldSize}" />
                        <Setter Property="Height" Value="{Binding Path=Value, ElementName=_fieldSize}" />
                        <Setter Property="Canvas.Left">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource _productConverter}">
                                    <Binding Path="Width" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="X" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Canvas.Top">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource _productConverter}">
                                    <Binding Path="Height" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="Y" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <Rectangle.Style>
                                <Style TargetType="Rectangle">
                                    <Setter Property="Stroke">
                                        <Setter.Value>
                                            <SolidColorBrush x:Name="Test" Color="{Binding ElementName=_borderColor, Path=Color, Mode=OneWay}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="StrokeThickness">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource _productConverter}">
                                                <Binding Path="Value" ElementName="_fieldSize" />
                                                <Binding Source="0.01" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsAlive}" Value="True">
                                            <Setter Property="Fill">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{Binding ElementName=_aliveColor, Path=Color, Mode=OneWay}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsAlive}" Value="False">
                                            <Setter Property="Fill">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{Binding ElementName=_deadColor, Path=Color, Mode=OneWay}" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsAlive}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Setter Property="Fill" Value="Transparent" />
                                            <Setter Property="Stroke" Value="Transparent" />
                                            <Setter Property="IsHitTestVisible" Value="False" />
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="StrokeThickness" Value="2" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding RequestLifeStateChangeCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Rectangle>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>-->
    </DockPanel>
</UserControl>
